// Copyright 2022 Lingfei Kong <colin404@foxmail.com>. All rights reserved.
// Use of this source code is governed by a MIT style
// license that can be found in the LICENSE file. The original repo for
// this file is https://github.com/onexstack/onex.
//

syntax = "proto3";

package usercenter.v1;

import "errors/errors.proto";

option go_package = "github.com/costa92/go-protoc/v2/pkg/api/apiserver/v1;v1";

enum ErrorReason {
  option (errors.default_code) = 500;

  // 用户登录失败，身份验证未通过
  UserLoginFailed = 0 [(errors.code) = 401];
  // 用户已存在，无法创建用户
  UserAlreadyExists = 1 [(errors.code) = 409];
  // 用户未找到，可能是用户不存在或输入的用户标识有误
  UserNotFound = 2 [(errors.code) = 404];
  // 创建用户失败，可能是由于服务器或其他问题导致的创建过程中的错误
  UserCreateFailed = 3 [(errors.code) = 541];
  // 用户操作被禁止，可能是由于权限不足或其他安全限制导致的
  UserOperationForbidden = 4 [(errors.code) = 403];

  // 密钥达到最大数量限制，无法继续创建新密钥
  SecretReachMaxCount= 5 [(errors.code) = 400];
  // 密钥未找到，可能是由于密钥不存在或输入的密钥标识有误
  SecretNotFound = 6 [(errors.code) = 404];
  // 创建密钥失败，可能是由于服务器或其他问题导致的创建过程中的错误
  SecretCreateFailed = 7 [(errors.code) = 541];

  // JWT令牌无效，可能是签名错误、格式错误或已被篡改
  JWTTokenInvalid = 8 [(errors.code) = 401];
  // JWT令牌已过期，需要重新获取令牌
  JWTTokenExpired = 9 [(errors.code) = 401];
  // JWT令牌格式错误，无法解析
  JWTTokenMalformed = 10 [(errors.code) = 401];
  // JWT令牌尚未生效，当前时间早于令牌的生效时间
  JWTTokenNotValidYet = 11 [(errors.code) = 401];
  // JWT令牌缺失，请求头中未包含Authorization字段
  JWTTokenMissing = 12 [(errors.code) = 401];
  // JWT令牌格式不正确，应为Bearer {token}格式
  JWTTokenFormatInvalid = 13 [(errors.code) = 401];
  // JWT签名方法不匹配，令牌使用了不支持的签名算法
  JWTSigningMethodMismatch = 14 [(errors.code) = 401];
}
