// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package apiserver

import (
	"github.com/costa92/go-protoc/internal/apiserver/options"
	"github.com/costa92/go-protoc/internal/apiserver/service"
	"github.com/costa92/go-protoc/pkg/logger"
	"github.com/google/wire"
)

// Injectors from wire.go:

// InitializeAPIServer 初始化 API 服务器
func InitializeAPIServer() (*APIServer, error) {
	string2 := ProvideServerName()
	logOptions := logger.NewLogOptions()
	loggerLogger, err := logger.NewLoggerFromOptions(logOptions)
	if err != nil {
		return nil, err
	}
	greeterV1Service := service.NewGreeterV1Service(loggerLogger)
	greeterV2Service := service.NewGreeterV2Service(loggerLogger)
	apiGroupInstaller := service.NewGreeterInstaller(greeterV1Service, greeterV2Service)
	apiServer := NewAPIServer(string2, loggerLogger, apiGroupInstaller)
	return apiServer, nil
}

// wire.go:

// ProvideServerName 提供服务器名称
func ProvideServerName() string {
	return "apiserver"
}

// 将所有提供者集合组合到一起
var allProviderSets = wire.NewSet(
	ProvideServerName,
	NewAPIServer, options.ProviderSet, logger.ProviderSet, service.ProviderSet,
)
