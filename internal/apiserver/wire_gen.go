// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package apiserver

import (
	"context"
	"github.com/costa92/go-protoc/internal/apiserver/server"
	"github.com/costa92/go-protoc/internal/apiserver/service"
	"github.com/costa92/go-protoc/pkg/logger"
	"github.com/costa92/go-protoc/pkg/options"
	"github.com/google/wire"
)

// Injectors from wire.go:

// InitializeServer 初始化 API 服务器
func InitializeServer(ctx context.Context) (*Server, error) {
	config, err := ProvideConfig()
	if err != nil {
		return nil, err
	}
	server, err := NewServer(ctx, config)
	if err != nil {
		return nil, err
	}
	return server, nil
}

// wire.go:

// ProvideServerName 提供服务器名称
func ProvideServerName() string {
	return "apiserver"
}

// ProvideConfig 提供服务器配置
func ProvideConfig() (*Config, error) {
	return &Config{
		GRPCOptions: options.NewGRPCOptions(),
		HTTPOptions: options.NewHTTPOptions(),
	}, nil
}

// 将所有提供者集合组合到一起
var allProviderSets = wire.NewSet(
	ProvideServerName,
	ProvideConfig,
	NewServer, server.ProviderSet, logger.ProviderSet, service.ProviderSet,
)
