// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package apiserver

import (
	"context"

	"github.com/costa92/go-protoc/internal/apiserver/server"
	"github.com/costa92/go-protoc/internal/apiserver/service"
	"github.com/costa92/go-protoc/pkg/app"
	"github.com/costa92/go-protoc/pkg/logger"
	"github.com/costa92/go-protoc/pkg/options"
	"github.com/google/wire"
)

// Injectors from wire.go:

// InitializeServer 初始化 API 服务器
func InitializeServer() (*Server, error) {
	context := ProvideContext()
	config := ProvideConfig()
	app := ProvideApp()
	server, err := NewServer(context, config, app)
	if err != nil {
		return nil, err
	}
	return server, nil
}

// wire.go:

// ProvideContext 提供上下文
func ProvideContext() context.Context {
	return context.Background()
}

// ProvideConfig 提供配置
func ProvideConfig() *Config {
	return &Config{
		GRPCOptions: options.NewGRPCOptions(),
		HTTPOptions: options.NewHTTPOptions(),
	}
}

// ProvideApp 提供应用实例
func ProvideApp() *app.App {
	return app.NewApp("apiserver", "apiserver")
}

// ProvideServerName 提供服务器名称
func ProvideServerName() string {
	return "apiserver"
}

// 将所有提供者集合组合到一起
var allProviderSets = wire.NewSet(
	ProvideContext,
	ProvideConfig,
	ProvideApp,
	ProvideServerName,
server.ProviderSet, logger.ProviderSet, service.ProviderSet,
)
