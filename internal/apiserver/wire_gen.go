// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package apiserver

import (
	"github.com/costa92/go-protoc/v2/internal/apiserver/handler"
	"github.com/costa92/go-protoc/v2/pkg/server"
)

// Injectors from wire.go:

func InitializeWebServer(arg <-chan struct{}, config *Config) (server.Server, error) {
	registrar := ProvideRegistrar()
	kratosAppConfig := ProvideKratosAppConfig(registrar)
	handlerHandler := handler.NewHandler()
	logger := ProvideKratosLogger()
	v := NewMiddlewares(logger)
	serverConfig := &ServerConfig{
		cfg:         config,
		appConfig:   kratosAppConfig,
		handler:     handlerHandler,
		middlewares: v,
	}
	serverServer, err := NewWebServer(serverConfig)
	if err != nil {
		return nil, err
	}
	return serverServer, nil
}
